{"cmds": ["echo \"{{.GREETING}}\"", "task -l"], "org_taskname": "default", "silent": true}
{"cmds": ["bash tools/install_mc.sh"], "desc": "install minio client", "org_taskname": "install-mc"}
{"cmds": ["sudo apt install -y zsh curl wget", "git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh", "cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc", "chsh -s /bin/zsh"], "desc": "install zsh and oh-my-zsh from github", "org_taskname": "install-zsh"}
{"cmds": ["sed -i 's/.*ZSH_THEME=.*/ZSH_THEME=\"bureau\"/' ~/.zshrc", "sed -i 's/.*DISABLE_UPDATE_PROMPT=.*/DISABLE_UPDATE_PROMPT=true/' ~/.zshrc", "sed -i 's/.*DISABLE_AUTO_UPDATE=.*/DISABLE_AUTO_UPDATE=true/' ~/.zshrc"], "desc": "set bureau theme for zsh", "org_taskname": "config-zsh"}
{"cmds": ["test -f /tmp/yq_linux_amd64 || wget -O /tmp/yq_linux_amd64 \\\nhttps://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64\n", "chmod +x /tmp/yq_linux_amd64", "sudo mv /tmp/yq_linux_amd64 /usr/bin/yq", "sudo mv /tmp/yq_linux_amd64 /usr/bin/yq"], "desc": "install yq yaml processor", "org_taskname": "install-yq", "status": ["test -f /usr/bin/yq"]}
{"cmds": ["sudo apt-get update && sudo apt-get -y install \\\napt-transport-https \\\nca-certificates \\\ncurl \\\nsoftware-properties-common\n", "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -", "sudo apt-key fingerprint 0EBFCD88", "sudo add-apt-repository \\\n\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) \\\nstable\"\n", "sudo apt-get update && sudo apt-get install -y docker-ce", "sudo usermod -aG docker $USER"], "desc": "install docker ce", "org_taskname": "install-docker-ce"}
{"cmds": ["sudo cp docker_cfgs/@etc@docker@daemon.json /etc/docker/daemon.json", "sudo systemctl restart docker"], "desc": "allows to use devsrv:5000 docker repo", "org_taskname": "setup-docker-devsrv-repo"}
{"cmds": ["echo \"BUILD={{.build_flavor}}\"", "curl -L \\\n\"{{.build_base}}/{{.build_version}}/{{.build_flavor}}\" \\\n-o /tmp/docker-compose && chmod +x /tmp/docker-compose\n", "sudo mv /tmp/docker-compose /usr/bin/docker-compose"], "desc": "_", "org_taskname": "install-docker-compose", "vars": {"build_base": "https://github.com/docker/compose/releases/download", "build_flavor": {"sh": "echo docker-compose-$(uname -s)-$(uname -m)"}, "build_version": "1.24.0"}}
{"cmds": ["base=https://github.com/docker/machine/releases/download/v0.16.0 && \\\ncurl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine && \\\nchmod +x /tmp/docker-machine && \\\nsudo mv /tmp/docker-machine /usr/local/bin/docker-machine\n"], "desc": "_", "org_taskname": "install-docker-machine"}
{"cmds": ["wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -", "wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -", "sudo add-apt-repository \"deb http://download.virtualbox.org/virtualbox/debian xenial contrib\"", "sudo apt-get update", "sudo apt-get install virtualbox-6.0"], "desc": "_", "org_taskname": "instal-virtual-box"}
{"cmds": ["docker run --restart=always -d --name rabbitmq \\\n--network host \\\n-p 5672:5672 -p 15672:15672 \\\nrabbitmq:3-management\n"], "desc": "start default rabbitmq", "org_taskname": "start-rabbitmq"}
{"cmds": ["bash tools/install_ansible.sh"], "desc": "install latest ansible", "org_taskname": "install-ansible"}
{"cmds": ["wget https://raw.github.com/lehmannro/assert.sh/v1.1/assert.sh"], "desc": "bash library for performing cli test", "org_taskname": "install-assert"}
{"cmds": [{"task": "install-zsh"}, {"task": "config-zsh"}, {"task": "install-docker-ce"}], "desc": "install and start base services", "org_taskname": "install-base"}
