# https://taskfile.dev

version: '3'
# curl -sL https://taskfile.dev/install.sh | sh
# curl -sL https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh | sh

output: 'prefixed'


vars:
  GREETING: parquet
  VENV_NAME: {sh: cat venv.name.txt}

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
      - task -l
    silent: true
    prefix: "-"

  conda:add-channel:forge:
    desc: add conda-forge channel
    cmds:
      - conda config --add channels conda-forge

  venv:sh:
    desc: >-
      enter environmet shell.
      usage '$(task venv:shell)'
    cmds:
      - ./cenv.sh bash
    # silent: yes

  venv:exists:
    desc: predicate. used for deps and checks
    cmds:
      - |
        conda info --envs | grep {{.VENV_NAME}} \
          || (echo "status=missing venv={{.VENV_NAME}}. \
          resolve='task venv:create'" \
             && exit 1)
    silent: yes

  venv:create-safe: &ref_venv_create-safe
    desc: create venv {{.VENV_NAME}}
    cmds:
      # here we test venv:sh command
      # and use bash if expression syntax:
      # if(check) then(&&) { echo ok } else(||) {resolve}
      - |
        task venv:exists 2>/dev/null \
        && echo "tasker: using existig venv ^^^" \
        || conda create -y -n {{.VENV_NAME}} python=3.7
      # create short alias for safe command
  venv:create: *ref_venv_create-safe

  venv:remove:
    desc: clear venv
    cmds:
      - conda env remove -n {{.VENV_NAME}}

  __empty_var:
    cmds:
      - |
        if [[ "{{.DEPS_LIST}}" == "" ]]; then \
          echo "requred args DEPS_LIST=value"; fi
    silent: yes

  __empty_var__test:
    cmds:
      - ./tools/should work task __empty_var
      - ./tools/should break task __empty_var DEPS_LIST=value

  conda:install:deps:
    desc: install conda packages
    args:
      DEPS_LIST:
    cmds:
      - echo "deps={{.DEPS_LIST}}"
      - |
        if [[ "{{.DEPS_LIST}}" == "" ]]; then \
           echo required args: DEPS_LIST; exit 1 ; fi
      - |
        echo "installing $(cat {{.DEPS_LIST}} | wc -l) packages \
        from {{.DEPS_LIST}}"
      - conda install -n {{.VENV_NAME}} -y $(cat {{.DEPS_LIST}})
    silent: yes

  venv:install:
    desc: install conda packages
    cmds:
      - task conda:install:deps DEPS_LIST=deps/conda.deps.txt
      - task conda:install:deps DEPS_LIST=deps/conda.dev.deps.txt

  venv:update:
    desc: create if not exsit and install deps.conda.deps
    cmds:
      - task venv:create
      - task venv:install

  venv:upgrade:
    desc: Updates packages to the latest compatible version.
    cmds:
      - task venv:create
      - conda update -n {{.VENV_NAME}}

  venv:test:sanity:
    desc: check simple imports
    deps:
      - venv:exists
    cmds:
      - |
        ./cenv.sh python -c 'import sample_pq'

  py:fmt:
    desc: run code autoformat
    cmds:
      - yapf --style ./conf/style.yapf.toml -ir -e .venv .

  tools:fix-exe:
    desc: make all files in ./tools executable
    cmds:
      - chmod -R +x ./tools


