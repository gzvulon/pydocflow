# https://taskfile.dev

version: '2.3'

vars:
  GREETING: Infra Tasks

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
      - task -l
    silent: true

# User Soft installation

  install-mc:
    desc: "install minio client"
    cmds:
      - bash tools/install_mc.sh

  install-zsh:
    desc: "install zsh and oh-my-zsh from github"
    cmds:
      - sudo apt install -y zsh curl wget
      - git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
      - cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
      - chsh -s /bin/zsh

  config-zsh:
    desc: "set bureau theme for zsh"
    cmds:
      - sed -i 's/.*ZSH_THEME=.*/ZSH_THEME="bureau"/' ~/.zshrc
      - sed -i 's/.*DISABLE_UPDATE_PROMPT=.*/DISABLE_UPDATE_PROMPT=true/' ~/.zshrc
      - sed -i 's/.*DISABLE_AUTO_UPDATE=.*/DISABLE_AUTO_UPDATE=true/' ~/.zshrc

# System tools installation
  install-yq:
    desc: "install yq yaml processor"
    cmds:
      - |
        test -f /tmp/yq_linux_amd64 || wget -O /tmp/yq_linux_amd64 \
        https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64
      - chmod +x /tmp/yq_linux_amd64
      - sudo mv /tmp/yq_linux_amd64 /usr/bin/yq
      - sudo mv /tmp/yq_linux_amd64 /usr/bin/yq
    status:
      - test -f /usr/bin/yq

# System Base Services Installation

  install-docker-ce:
    desc: install docker ce
    cmds:
      - |
        sudo apt-get update && sudo apt-get -y install \
        apt-transport-https \
        ca-certificates \
        curl \
        software-properties-common
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      - sudo apt-key fingerprint 0EBFCD88
      - |
        sudo add-apt-repository \
        "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) \
        stable"
      - sudo apt-get update && sudo apt-get install -y docker-ce
      - sudo usermod -aG docker $USER

  setup-docker-devsrv-repo:
    desc: allows to use devsrv:5000 docker repo
    cmds:
      - sudo cp docker_cfgs/@etc@docker@daemon.json /etc/docker/daemon.json
      - sudo systemctl restart docker

  install-docker-compose:
    # TODO: add competions
    desc: _
    vars:
      build_flavor: {sh: "echo docker-compose-$(uname -s)-$(uname -m)"}
      build_version: "1.24.0"
      build_base: https://github.com/docker/compose/releases/download
    cmds:
      - echo "BUILD={{.build_flavor}}"
      - |
        curl -L \
        "{{.build_base}}/{{.build_version}}/{{.build_flavor}}" \
        -o /tmp/docker-compose && chmod +x /tmp/docker-compose
      - sudo mv /tmp/docker-compose /usr/bin/docker-compose

  install-docker-machine:
    desc: _
    cmds:
      - |
        base=https://github.com/docker/machine/releases/download/v0.16.0 && \
        curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine && \
        chmod +x /tmp/docker-machine && \
        sudo mv /tmp/docker-machine /usr/local/bin/docker-machine

  instal-virtual-box:
    desc: _
    cmds:
      - wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
      - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
      - sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian xenial contrib"
      - sudo apt-get update
      - sudo apt-get install virtualbox-6.0


  start-rabbitmq:
    desc: start default rabbitmq
    cmds:
      - |
        docker run --restart=always -d --name rabbitmq \
        --network host \
        -p 5672:5672 -p 15672:15672 \
        rabbitmq:3-management

  install-ansible:
    desc: install latest ansible
    cmds:
      - bash tools/install_ansible.sh

  install-assert:
    desc: bash library for performing cli test
    cmds:
      - wget https://raw.github.com/lehmannro/assert.sh/v1.1/assert.sh



# Composite tasks

  install-base:
    desc: install and start base services
    cmds:
      - task: install-zsh
      - task: config-zsh
      - task: install-docker-ce
      # - task: start-rabbitmq

  install-posgres-client-python:
      desc: _
      urls:
        - https://stackoverflow.com/questions/11618898/pg-config-executable-not-found
      cmds:
        - echo ubuntu, "sudo apt-get install libpq-dev"
        - echo apline, "apk add postgresql-dev"
        - echo osx, "brew install postgresql"
        - echo "python -m pip install psycopg2"

